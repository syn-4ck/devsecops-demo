name: "[Container analysis] Trivy Container"

on:
  push:
    branches: ["main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
    paths:
      - 'WebGoat/**'

permissions:
  contents: read # for actions/checkout to fetch code
  security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

jobs:
  trivy-container:
    name: Trivy Container
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      -   name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
            architecture: x64

      -   name: Cache Maven packages
          uses: actions/cache@v3.3.1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2-

      -   name: Build with Maven
          working-directory: ./WebGoat
          run: mvn clean install

      - name: Build an image from Dockerfile
        working-directory: WebGoat
        run: |
          docker build -t docker.io/ghsyn4ck/demo-devsecops:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/ghsyn4ck/demo-devsecops:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
